import React, { useEffect, useState, useRef } from 'react'
import UserAva from '../../../components/base/userAva/Image'
import styles from './EditProfile.module.css'
import Head from 'next/head'
import Button from '../../../components/base/button/button'
import { motion } from 'framer-motion'
import { useRouter } from 'next/router'
import swal from 'sweetalert'
import axios from 'axios'

const EditProfile = () => {

    const [userData, setUserData] = useState('')
    const [updateData, setUpdateData] = useState('')
    const [authToken, setAuthToken] = useState('')
    const [isAvaHover, setisAvaHover] = useState(false)
    const [previewPhoto, setPreviewPhoto] = useState('')

    const router = useRouter()

    useEffect(() => {
        if (typeof window !== 'undefined') {
            const isAuth = localStorage.getItem('ChatopiaUser')
            if (!isAuth) {
                swal({
                    title: "Warning!",
                    text: `Please login to access this page`,
                    icon: "error",
                })
                router.push('/auth/user/signin?redirect=true')
            } else {
                const { token } = JSON.parse(isAuth)
                setAuthToken(token)
            }
        }
    }, [])

    const fetchUser = async () => {

        try {
            const result = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/v1/users/profile`, {
                headers: {
                    Authorization: `Bearer ${authToken}`
                }
            })
            const data = result.data.data
            setUserData(result.data.data)
            setPreviewPhoto(data.photo)

        } catch (error) {
            console.log(error)
            swal({
                title: "Warning!",
                text: `${error.response.data.message}`,
                icon: "error",
            })
        }
    }

    useEffect(() => {
        if (authToken) {
            fetchUser()
        }
    }, [authToken])

    const handleChangePhoto = (e) => {
        const file = e.target.files[0]
        const urlPreview = URL.createObjectURL(file)
        setPreviewPhoto(urlPreview)
        setUpdateData({ ...updateData, photo: file })
    }

    const handleDelPrev = () => {
        setPreviewPhoto(userData.photo)
    }

    const handleInput = (e) => {
        setUpdateData({ ...updateData, [e.target.name]: e.target.value })
    }

    const postUpdate = async (formData) => {
        console.log('send update')
        console.log(formData.get('photo'))

        if (formData.get('name') === userData.name) {
            formData.delete('name')
            delete updateData.name
        }
        if (formData.get('email') === userData.email) {
            formData.delete('email')
            delete updateData.email
        }
        if (formData.get('phone') === userData.phone) {
            formData.delete('phone')
            delete updateData.phone
        }

        if (Object.keys(updateData).length === 0) {
            return swal({
                title: "Warning!",
                text: 'You did not changed any data, OK!',
                icon: "warning",
            })
        }

        try {
            const result = await axios.put(`${process.env.NEXT_PUBLIC_API_URL}/v1/users/edit`, formData, {
                headers: {
                    Authorization: `Bearer ${authToken}`
                }
            })
            console.log(result.data.data)
            swal({
                title: "Success",
                text: `Your profile has been updated!`,
                icon: "success",
            })

        } catch (error) {
            console.log(error)
        }
    }

    const handleUpdate = (e) => {
        e.preventDefault()

        console.log()
        let formData = new FormData()
        if (updateData.photo) {
            console.log('photo')
            formData.append('photo', updateData.photo)
        }
        if (updateData.name) {
            console.log('name')
            formData.append('name', updateData.name)
        }
        if (updateData.email) {
            console.log('email')
            formData.append('email', updateData.email)
        }
        if (updateData.phone) {
            console.log('phone')
            formData.append('phone', updateData.phone)
        }

        postUpdate(formData)
    }

    console.log(updateData)

    return (
        <>
            <Head>
                <title>Chatopia | User Profile</title>
                <meta name="description" content="Generated by Chatopia" />
            </Head>
            <div className={`${styles.edit_profile}`}>
                <motion.div
                    initial={{
                        scale: 0.5,
                        opacity: 0
                    }}
                    animate={{
                        scale: 1,
                        opacity: 1,
                        transition: {
                            delay: 0.2
                        }
                    }}
                    exit={{
                        width: 0,
                        transition: { duration: 100 }
                    }}
                >
                    <div className={`${styles.edit_container}`}>
                        <div className={`${styles.back}`}>
                            <span onClick={() => router.push('/chat')} >{'<'}</span>
                        </div>
                        <UserAva
                            source={previewPhoto ? previewPhoto : '/assets/img/dummy-img.jpg'}
                            style={{
                                width: 100,
                                height: 100,
                                position: 'relative',
                                borderRadius: '50%',
                                position: 'relative',

                                // margin: '0px auto'
                            }}
                            className={`${styles.user_ava}`}
                            onMouseOver={() => setisAvaHover(true)}
                            onMouseLeave={() => setisAvaHover(false)}
                        >
                            <div className={`${styles.edit_ava}`}
                                style={isAvaHover ? {} : { display: 'none' }}
                            // style={{ display }}
                            >
                                <label
                                    // text={'Edit'}
                                    htmlFor={'photo'}
                                >
                                    Change
                                </label>
                                {previewPhoto ?
                                    <Button
                                        text={'X'}
                                        onClick={handleDelPrev}
                                    />
                                    :
                                    <></>
                                }
                                <input
                                    type={'file'}
                                    id={'photo'}
                                    name={'photo'}
                                    style={{
                                        display: 'none'
                                    }}
                                    onChange={handleChangePhoto}
                                />
                            </div>
                        </UserAva>
                        <h3 className={`${styles.name}`}>{userData.name ? userData.name : 'Loading...'}</h3>
                        <h5 className={`${styles.email}`}>{userData.email ? userData.email : 'Loading...'}</h5>
                        <form className={`${styles.input_forms}`}>
                            <div className={`${styles.input}`}>
                                <label htmlFor="id">User ID</label>
                                <input
                                    type="text"
                                    id='id'
                                    name='id'
                                    defaultValue={userData.id ? userData.id : ''}
                                    disabled
                                />
                            </div>
                            <div className={`${styles.input}`}>
                                <label htmlFor="name">Name</label>
                                <input
                                    type="text"
                                    id='name'
                                    name='name'
                                    defaultValue={userData.name ? userData.name : ''}
                                    onChange={handleInput}
                                />
                            </div>
                            <div className={`${styles.input}`}>
                                <label htmlFor="name">Email Address</label>
                                <input
                                    type="text"
                                    id='email'
                                    name='email'
                                    defaultValue={userData.email ? userData.email : ''}
                                    onChange={handleInput}

                                />
                            </div>
                            <div className={`${styles.input}`}>
                                <label htmlFor="name">Phone Number</label>
                                <input
                                    type="text"
                                    id='phone'
                                    name='phone'
                                    defaultValue={userData.phone ? userData.phone : ''}
                                    onChange={handleInput}
                                    placeholder={'insert your phone number'}
                                />
                            </div>
                        </form>
                        <Button
                            text={'Update'}
                            type={'button'}
                            className={`${styles.update_btn}`}
                            onClick={handleUpdate}
                        />
                    </div>
                </motion.div>
            </div>
        </>
    )
}

export default EditProfile